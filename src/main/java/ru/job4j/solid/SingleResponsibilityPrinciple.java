package ru.job4j.solid;

/**
 * Демонстрация класса, ответственного за регистрацию, авторизацию пользователя,
 *  отправку им сообщения на форум, подключения к бд
 * public class User {
 *     private User user;
 *
 *     Нужно выделить в отдельный сервис авторизации пользователя
 *     public User register() {
 *         // логика регистрации, с использованием подключения к бд
 *     }
 *
 *     Нужно выделить в отдельный сервис авторизации пользователя
 *     public User login() {
 *         // логика авторизации, с использованием подключения к бд
 *     }
 *
 *     Нужно выделить в отдельный сервис для сообщений
 *     public void sendMessage() {
 *         // отправка сообщения на форум
 *     }
 *
 *     Нужно выделить в отдельный сервис авторизации пользователя
 *     private void sendEmail(User user) {
 *         // логика, которая выполняет отправку почты, для подтверждения регистрации
 *     }
 *
 *     Выделить в репозиторий, выделить в абстракцию с использованием интерфейса
 *     private Connection getConnection() {
 *         // код получения соединения к бд
 *     }
 *
 *     Класс должен быть ответственен только либо за работу с бд, либо за авторизацию, либо за отправку\полечения\удаление\изменение сообщений
 * }
 *
 *
 * public class Grabber implements Grab {
 *       private final Properties cfg = new Properties();
 *
 *       Нужно вынести создание объекта из метода, сделать DI в конструкторе, через интерфейс
 *       public Store store() {
 *           return new PsqlStore(cfg);
 *       }
 *
 *       Нужно вынести создание объекта из метода, сделать DI в конструкторе, через интерфейс
 *       public Parse parse() {
 *           return new SqlRuParse(new SqlRuDateTimeParser());
 *       }
 * }
 *
 * класс нарушает принцип единой ответственности, так как содержит логику работы с данными,
 * причем как с базой данных, так и с файловой системой, и эта логика может поменяться
 * public class Export {
 *     public void exportToJson() {
 *         // код работы с файловой системой, сохранение данных в виде файла
 *     }
 *
 *     public void exportToDatabase() {
 *         // код подключения к бд
 *     }
 * }
 */
public class SingleResponsibilityPrinciple {
}